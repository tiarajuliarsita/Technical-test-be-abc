// Code generated by mockery v2.43.1. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"
	mock "github.com/stretchr/testify/mock"
)

// Handler is an autogenerated mock type for the Handler type
type Handler struct {
	mock.Mock
}

// CreateTodo provides a mock function with given fields: e
func (_m *Handler) CreateTodo(e echo.Context) error {
	ret := _m.Called(e)

	if len(ret) == 0 {
		panic("no return value specified for CreateTodo")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(e)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteTodoById provides a mock function with given fields: e
func (_m *Handler) DeleteTodoById(e echo.Context) error {
	ret := _m.Called(e)

	if len(ret) == 0 {
		panic("no return value specified for DeleteTodoById")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(e)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllTodos provides a mock function with given fields: e
func (_m *Handler) GetAllTodos(e echo.Context) error {
	ret := _m.Called(e)

	if len(ret) == 0 {
		panic("no return value specified for GetAllTodos")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(e)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetTodoById provides a mock function with given fields: e
func (_m *Handler) GetTodoById(e echo.Context) error {
	ret := _m.Called(e)

	if len(ret) == 0 {
		panic("no return value specified for GetTodoById")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(e)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateStatusTodo provides a mock function with given fields: e
func (_m *Handler) UpdateStatusTodo(e echo.Context) error {
	ret := _m.Called(e)

	if len(ret) == 0 {
		panic("no return value specified for UpdateStatusTodo")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(e)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateTodoById provides a mock function with given fields: e
func (_m *Handler) UpdateTodoById(e echo.Context) error {
	ret := _m.Called(e)

	if len(ret) == 0 {
		panic("no return value specified for UpdateTodoById")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(e)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewHandler creates a new instance of Handler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *Handler {
	mock := &Handler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
